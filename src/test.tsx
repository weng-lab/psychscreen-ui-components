import { createRoot } from "react-dom/client";
import { Box, Stack } from "@mui/material";
import ViolinBoxPlot from "./components/ViolinBoxPlot/violinBoxPlot";
import { useRef } from "react";

const sp1 = [
  5.12,
  7.42,
  18.52,
  19.86,
  29.87,
  23.46,
  11.58,
  7.51,
  9.71,
  14.32,
  13.88,
  15.41,
  36.37,
  17.64,
  4.24,
  22.28,
  11.15,
  6.18,
  9.39,
  15.5,
  3.15,
  47.5,
  29.53,
  7.28,
  32.01,
  11.01,
  4.68,
  4.24,
  38.42,
  5.71,
  30.56,
  28.43,
  13.23,
  7.45,
  26.66,
  22.78,
  38.95,
  2,
  31.52,
  21.29,
  12.94,
  21.54,
  9.78,
  13.17,
  19.55,
  35.56,
  34.81,
  3.1,
  43.07,
  15.78,
  12.06,
  27.06,
  5.72,
  19,
  11.22,
  51.76,
  44.23,
  39.24,
  4.36,
  39.85,
  27.79,
  11.53,
  29.05,
  13.36,
  7.12,
  23.6,
  36.47,
  3.43,
  11.82,
  41.04,
  12.8,
  32.5,
  5.44,
  68.4,
  28.92,
  29.6,
  20.76,
  11.08,
  4.99,
  23.99,
  3.84,
  28.29,
  10.69,
  42.15,
  37.08,
  2.96,
  33.45,
  5.04,
  28.81,
  15.67,
  30.6,
  8.31,
  44.46,
  36.13,
  3.17,
  37.65,
  32.54,
  25.26,
  3.52,
  9.04,
  30.29,
  2.96,
  38.76,
  31.81,
  10.89,
  19.27,
  5.29,
  31.45,
  36.11,
  9.57,
  20.8,
  38.08,
  4.11,
  43.28,
  9.73,
  12.71,
  34.62,
  19.52,
  15.73,
  38.59,
  15.11,
  19.46,
  6.1,
  14.52,
  9.98,
  8.42,
  43.16,
  1.64,
  6.89,
  23.85,
  15.51,
  30.27,
  11.82,
  27.9,
  16.13,
  4.2,
  28.85,
  7.96,
  5.43,
  2.58,
  7.42,
  7.56,
  14.14,
  2.61,
  27.6,
  10.71,
  29.57,
  0.68,
  15.16,
  36.1,
  5.73,
  39.54,
  27.23,
  35.18,
  2.54,
  37.81,
  14.38,
  23.8,
  21.81,
  26.86,
  5.17,
  13.76,
  14.87,
  24.41,
  12.44,
  30.27,
  4.81,
  3.31,
  15.35,
  33.84,
  9.95,
  10.31,
  5.83,
  19.29,
  10.25,
  15.31,
  6.22,
  29.24,
  36.74,
  44.63,
  6.78,
  8.29,
  22.87,
  35.7,
  23.35,
  16.69,
  9.3,
  11.61,
  11.18,
  15.63,
  39.48,
  9.84,
  14.1,
  0.95,
  18.66,
  27.37,
  14.19,
  35.06,
  40.14,
  12.55,
  24.87,
  14.33,
  21.77,
  5.87,
  35.31,
  22.68,
  15.54,
  10.12,
  25.04,
  3.73,
  24.59,
  11.97,
  8.06,
  1.5,
  14.96,
  0.51,
  17.89,
  33.03,
  41.72,
  27.9,
  38.38,
  5.02,
  39.83,
  13.75,
  39.37,
  13.2,
  35,
  40.03,
  35.93,
  31.36,
  4.6,
  18.34,
  5.07,
  40.83,
  39.75,
  14.54,
  28.14,
  41.57,
  20.37,
  1.3,
  0.49,
  4.09,
  15.68,
  32.18,
  40,
  23.08,
  30.51,
  23.54,
  18.16,
  28.68,
  3.47,
  2.9,
  15.54,
  38.14,
  4.92,
  8.15,
  7.21,
  1.69,
  31.23,
  29.8,
  30.28,
  11.63,
  18.33,
  30.84,
  10.26,
  1.92,
  15.52,
  2.33,
  27.99,
  10.01,
  3.76,
  18.83,
  0.53,
  4.37,
  14.07,
  28.04,
  8.97,
  10.78,
  0.46,
  15.95,
  4.55,
  1.51,
  41.86,
  8.54,
  10.78,
  18.18,
  12.15,
  9.61,
  8.75,
  16.03,
  13.15,
  39.94,
  9.44,
  40.87,
  53.1,
  23,
  27.58,
  12.21,
  10.12,
  31.05,
  13.84,
  37.66,
  14.62,
  15.17,
  9.82,
  48.59,
  35.95,
  28.69,
  19.29,
  22.61,
  11.3,
  28.18,
  15.44,
  38.29,
  34.55,
  18.49,
  3.98,
  21.09,
  8.71,
  9.56,
  28.91,
  21.25,
  49.37,
  12.65
]

const sp1Adipose = [18.83, 10.12, 5.72, 5.07, 4.81, 4.68]

function App() {

  const ref = useRef()

  const data = [5, 4, 4, 3, 2, 1, 1, 1]
  const data2 = [7, 2, 6, 7, 7, 7, 7, 8 ,8 ,8 ,8 ,9, 9, 2, 3, 3, 3, 2, 1, 1, 1, 1, 4, 4, 5, 5 ,6, 6, 6, 7, 5, 4, 2,  9, 8, 10, 18]
  const data3 = [
    11.44, 6.88, 17.83, 4.46, 8.68, 8.95, 8.11, 13.21, 0.56, 18.11,
    15.63, 14.69, 2.53, 14.61, 5.69, 17.72, 18.54, 15.96, 14.77, 12.49,
    13.20, 17.28, 1.59, 15.83, 15.59, 2.08, 5.68, 14.84, 3.47, 18.93,
    12.98, 10.97, 15.81, 12.22, 2.85, 16.55, 5.97, 15.92, 16.36, 5.86,
    10.42, 19.95, 12.81, 7.42, 17.02, 17.77, 7.03, 8.06, 16.68, 16.72,
    16.55, 15.90, 13.78, 2.16, 11.13, 10.40, 2.83, 19.01, 9.25, 4.09,
    2.22, 5.28, 4.05, 1.72, 13.25, 13.52, 19.66, 6.94, 12.70, 11.65,
    11.30, 11.82, 4.06, 12.37, 19.93, 12.85, 14.34, 0.03, 11.00, 18.61,
    11.31, 10.84, 18.05, 12.83, 14.60, 6.44, 18.25, 13.02, 14.31, 15.14,
    3.26, 3.26, 0.77, 12.23, 3.49, 16.00, 12.70, 14.30, 8.82, 15.62, 40, 39, 38, 38, 1, 1, .5, .5, .5
  ]
  const data4 = [10, 6, 2,2,2,2,2,2,2,2,2, 3, 50]
  const data5 = [
    -1, 0, 0, 4, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2, 3, 4, 3, 2, 3, 10,
    3, 5, 5, 6, 4, 3, 5, 6, 6, 9, 9, 1, 9, 9, 8, 9, 9, 10, 6, 4, 3, 4, 3, 4, 3,
    10, 11,
  ];
  
  const distributions = [
    {
      data: sp1,
      label: "SP1"
    },
    {
      data: sp1Adipose,
      label: "SP1 Adipose"
    },
  ]

  return (
    <Stack>
      <Box
        padding={1}
        sx={{ border: '1px solid', borderColor: 'divider', borderRadius: 1, position: "relative", width: "1600px", height: "800px" }}
        mt={2}
        mb={2}
        ml={10}
        ref={ref}
      >
        <ViolinBoxPlot
          distributions={distributions}
          loading={false}
          leftAxisLabel="Left Axis Label"
          labelOrientation="leftDiagonal"
          disableBoxPlot
        />
      </Box>
    </Stack>
  );
}

createRoot(document.getElementById("root")!).render(<App />);
